name: lce-release

on:
  push:
    tags:
      - v*

jobs:
  macos-release-wheel:
    name: Build release wheels for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7"]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Bazelisk
        run: |
          curl -L https://github.com/bazelbuild/bazelisk/releases/download/v1.3.0/bazelisk-darwin-amd64 > /usr/local/bin/bazelisk
          chmod +x /usr/local/bin/bazelisk
      - name: Build macOS wheels
        run: |
          python --version
          python -m pip install delocate wheel setuptools numpy six --no-cache-dir

          ./configure.sh

          bazelisk build :build_pip_pkg --copt=-fvisibility=hidden
          bazel-bin/build_pip_pkg artifacts

          for f in artifacts/*.whl; do
            delocate-wheel -w wheelhouse $f
          done
        shell: bash
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-wheels
          path: wheelhouse

  manylinux-release-wheel:
    name: Build release wheels for manylinux2010
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ["3.6", "3.7"]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build manylinux2010 wheels
        run: |
          docker run -e PYTHON_VERSION=${{ matrix.python-version }} -v ${PWD}:/compute-engine -w /compute-engine \
            tensorflow/tensorflow:custom-op-ubuntu16 \
            .github/tools/release_linux.sh

          sudo apt-get -y -qq install patchelf --no-install-recommends
          python -m pip install auditwheel --no-cache-dir

          for f in artifacts/*.whl; do
            auditwheel repair --plat manylinux2010_x86_64 $f
          done

          ls -al wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-wheels
          path: wheelhouse

  upload-wheels:
    name: Publish wheels to PyPi
    needs: [manylinux-release-wheel, macos-release-wheel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: Linux-wheels
          path: Linux-wheels
      - uses: actions/download-artifact@v1
        with:
          name: macOS-wheels
          path: macOS-wheels
      - run: |
          set -e -x
          mkdir -p dist
          cp Linux-wheels/*.whl dist/
          cp macOS-wheels/*.whl dist/
          ls -la dist/
          sha256sum dist/*.whl
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
